{"version":3,"sources":["assets/Search.svg","assets/Sorting.svg","assets/Logo.svg","components/Search.jsx","components/SortButton.jsx","components/SecurityDisplay.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","SearchInput","styled","div","search","Search","setValue","value","placeholder","onChange","e","target","SortContainer","Button","Navigation","SortButton","setByStatus","byStatus","useState","nav","setNav","onClick","src","sorting","alt","CameraBlocks","CameraName","ImgContainer","SecurityDisplay","devices","getRepContents","id","name","substring","shortName","length","replace","key","thumbnail","className","active","Wrapper","Info","SearchContainer","Title","InactiveTitle","Cameras","StatusView","Active","Inactive","App","renameProperty","JSON","stringify","status","cameraStatus","parse","nameOfDevice","console","log","mergeData","reduce","m","arr","forEach","obj","has","Object","assign","get","set","Map","values","sortData","sort","a","b","localeCompare","filter","dVices","toUpperCase","indexOf","toString","activeData","online","inactiveData","logo","style","width","height","map","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.52fd4ea2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Search.a3ae3d1b.svg\";","module.exports = __webpack_public_path__ + \"static/media/Sorting.cddc4b9b.svg\";","module.exports = __webpack_public_path__ + \"static/media/Logo.f22ad071.svg\";","import React from \"react\";\nimport search from \"../assets/Search.svg\";\nimport styled from \"styled-components\";\nconst SearchInput = styled.div`\n  width: 63%;\n  height: 100%;\n  margin-left: 0.5%;\n  input {\n    width: 42%;\n    height: 70%;\n    background-image: url(${search});\n    background-repeat: no-repeat;\n    background-position: 3% 50%;\n    background-size: 6%;\n    padding-left: 2.3%;\n    font-size: 10px;\n    color: #888888;\n    font-family: \"Open Sans\", sans-serif;\n    font-style: italic;\n    border: 1px #bfd1cb solid;\n    border-radius: 2px;\n    text-indent: 7%;\n\n    &:after {\n      opacity: 0.5;\n    }\n\n    &:focus {\n      outline: none;\n      background-image: none;\n    }\n    &:focus::placeholder {\n      color: transparent;\n    }\n  }\n`;\n\nfunction Search({ setValue, value }) {\n  return (\n    <SearchInput>\n      <input\n        placeholder='Search by Name or ID...'\n        onChange={e => setValue(e.target.value)}\n      />\n    </SearchInput>\n  );\n}\n\nexport default Search;\n","import React, { useState } from \"react\";\nimport sorting from \"../assets/Sorting.svg\";\nimport styled from \"styled-components\";\n\nconst SortContainer = styled.div`\n  width: 18%;\n  height: 71%;\n  margin-right: 2.5%;\n`;\nconst Button = styled.div`\n  width: 100%;\n  height: 100%;\n  margin-right: 2.5%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: 1px #c3c4c5 solid;\n  border-radius: 4px;\n  &:hover {\n    cursor: pointer;\n  }\n  img {\n    width: 10%;\n    height: 62%;\n    padding-right: 4%;\n  }\n  h5 {\n    margin: 0;\n    align-self: flex-start;\n    font-size: 10px;\n    color: #3b4651;\n  }\n`;\nconst Navigation = styled.div`\n  width: 7.2%;\n  height: 6%;\n  border-left: 1px solid #c3c4c5;\n  border-right: 1px solid #c3c4c5;\n  top: 17.2%;\n  right: 30.42%;\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  z-index: 1;\n  background: #fff;\n  div {\n    width: 100%;\n    height: 49%;\n    border-bottom: 1px solid #c3c4c5;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    &:hover {\n      cursor: pointer;\n    }\n    h5 {\n      text-align: center;\n    }\n  }\n`;\n\nfunction SortButton({ setByStatus, byStatus }) {\n  const [nav, setNav] = useState(false);\n\n  return (\n    <SortContainer>\n      <Button onClick={e => setNav(true)}>\n        <img src={sorting} alt='' />\n        <h5>Sort by : {byStatus === 0 ? \"Name\" : \"Status\"}</h5>\n      </Button>\n      {nav ? (\n        <Navigation>\n          <div\n            onClick={e => {\n              setByStatus(0);\n              setNav(false);\n            }}\n          >\n            {\" \"}\n            <h5>Name</h5>\n          </div>\n          <div\n            onClick={e => {\n              setByStatus(1);\n              setNav(false);\n            }}\n          >\n            <h5>Status</h5>\n          </div>\n        </Navigation>\n      ) : null}\n    </SortContainer>\n  );\n}\n\nexport default SortButton;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst CameraBlocks = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  overflow: hidden;\n  flex-direction: column;\n  box-shadow: 5px 9px 10px -6px rgba(0, 0, 0, 0.75);\n  align-items: center;\n  border-radius: 10px;\n  overflow-x: hidden;\n  overflow-y: auto;\n`;\nconst CameraName = styled.div`\n  width: 100%;\n  height: 45%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  border-radius: 0px 0px 5px 5px;\n  background: #ffffff;\n\n  .active {\n    width: 90%;\n    height: 90%;\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    align-items: flex-start;\n    border-left: 3px solid rgb(7, 204, 7);\n    border-radius: 4px;\n\n    h3 {\n      font-family: \"Lato\", sans-serif;\n      font-style: 600;\n      font-size: 8px;\n      letter-spacing: 1px;\n      margin: 0 0 0 2px;\n      opacity: 0.5;\n    }\n    h1 {\n      font-size: 10px;\n      font-family: \"Lato\", sans-serif;\n      font-weight: 600;\n      color: #2b4039;\n      letter-spacing: 1px;\n      margin: 0 0 0 2px;\n    }\n  }\n  .inactive {\n    width: 90%;\n    height: 90%;\n    border-left: 3px solid red;\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    align-items: flex-start;\n    border-radius: 4px;\n\n    h3 {\n      margin: 0 0 0 2px;\n      font-size: 8px;\n      font-family: \"Lato\", sans-serif;\n      letter-spacing: 1px;\n      font-style: 600;\n      opacity: 0.5;\n    }\n    h1 {\n      font-size: 12px;\n      font-family: \"Lato\", sans-serif;\n      font-weight: 600;\n      letter-spacing: 1px;\n      color: #2b4039;\n      margin: 0 0 0 2px;\n      font-size: 12px;\n    }\n  }\n`;\nconst ImgContainer = styled.div`\n  width: 100%;\n  height: 80%;\n  img {\n    width: 100%;\n    height: 100%;\n    border-radius: 10px 10px 0px 0px;\n  }\n`;\nfunction SecurityDisplay({ devices, id }) {\n  const getRepContents = devices.name.substring(15);\n  const shortName =\n    devices.name.length > 15\n      ? devices.name.replace(getRepContents, \"...\")\n      : devices.name;\n\n  return (\n    <CameraBlocks key={devices.id}>\n      <ImgContainer>\n        <img src={devices.thumbnail} alt='' />\n      </ImgContainer>\n      <CameraName className='status-n-name'>\n        <div className={devices.active ? \"active\" : \"inactive\"}>\n          <h3>{devices.active ? \"Active\" : \"Inactive\"}</h3>\n          <h1>{shortName}</h1>\n        </div>\n      </CameraName>\n    </CameraBlocks>\n  );\n}\n\nexport default SecurityDisplay;\n","import React, { useState } from \"react\";\nimport Search from \"./components/Search\";\nimport SortButton from \"./components/SortButton\";\nimport SecurityDisplay from \"./components/SecurityDisplay\";\nimport devices from \"./data/sample-devices.json\";\nimport status from \"./data/sample-status.json\";\nimport styled from \"styled-components\";\nimport logo from \"./assets/Logo.svg\";\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: flex-start;\n  flex-direction: column;\n  align-items: center;\n  header {\n    width: 100%;\n    height: 7%;\n    background-image: linear-gradient(to right, #a2dda7, #3fcaab);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\nconst Info = styled.div`\n  width: 40.5%;\n  height: 5%;\n  display: flex;\n  margin-top: 1%;\n\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n  h1 {\n    font-family: \"Open Sans\", sans-serif;\n    font-weight: bold;\n    font-size: 15px;\n    margin: 0;\n  }\n  h5 {\n    font-family: \"Open Sans\", sans-serif;\n    font-style: italic;\n    opacity: 0.5;\n    padding-top: 1%;\n    font-size: 8px;\n    margin: 0;\n  }\n`;\nconst SearchContainer = styled.div`\n  width: 41%;\n  height: 3%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-radius: 5px;\n  margin-top: 0.5%;\n`;\nconst Title = styled.div`\n  width: 40%;\n  height: 5%;\n  margin-bottom: 20px;\n  display: flex;\n  justify-content: flex-start;\n  align-items: flex-end;\n  h3 {\n    font-family: \"Open Sans\", sans-serif;\n    font-weight: 600;\n    color: #181616;\n    opacity: 0.5;\n    margin: 0;\n    font-size: 9px;\n  }\n  h5 {\n    font-family: \"Open Sans\", sans-serif;\n    font-weight: 600;\n    color: #181616;\n    margin: 0;\n    padding-left: 1%;\n    margin-bottom: 0.2%;\n    font-size: 9px;\n    opacity: 0.5;\n  }\n  hr {\n    width: 78%;\n    margin-left: 4%;\n    margin-bottom: 0.5%;\n    opacity: 0.5;\n  }\n`;\n\nconst InactiveTitle = styled.div`\n  width: 97%;\n  height: 6%;\n  display: flex;\n  justify-content: flex-start;\n  align-items: flex-end;\n  margin: 27px 0px 21px 14px;\n  h3 {\n    font-family: \"Open Sans\", sans-serif;\n    font-weight: 600;\n    color: #181616;\n    margin: 0;\n    font-size: 9px;\n    opacity: 0.5;\n  }\n  h5 {\n    font-family: \"Open Sans\", sans-serif;\n    font-weight: 600;\n    color: #181616;\n    margin: 0;\n    padding-left: 1%;\n    margin-bottom: 0.2%;\n    font-size: 9px;\n    opacity: 0.5;\n  }\n  hr {\n    width: 79%;\n    margin-bottom: 0.5%;\n    opacity: 0.5;\n  }\n`;\nconst Cameras = styled.div`\n  width: 42%;\n  height: 76%;\n  padding-top: 1.2%;\n  overflow-y: auto;\n  align-self: center;\n  display: grid;\n  grid-template-columns: repeat(3, 30%);\n  grid-auto-rows: 25%;\n  grid-column-gap: 20px;\n  grid-row-gap: 20px;\n  justify-content: center;\n`;\nconst StatusView = styled.div`\n  width: 42%;\n  height: 75%;\n  padding-top: 1.2%;\n  overflow-y: auto;\n  align-self: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\nconst Active = styled.div`\n  width: 100%;\n  height: 48%;\n  display: grid;\n  display: grid;\n  grid-template-columns: repeat(3, 30%);\n  grid-auto-rows: 48%;\n  grid-column-gap: 20px;\n  grid-row-gap: 20px;\n  justify-content: center;\n  overflow: none;\n`;\nconst Inactive = styled.div`\n  width: 100%;\n  height: 48%;\n  display: grid;\n  display: grid;\n  grid-template-columns: repeat(3, 30%);\n  grid-auto-rows: 48%;\n  grid-column-gap: 20px;\n  grid-row-gap: 20px;\n  justify-content: center;\n  overflow: none;\n  h3 {\n    margin: 0;\n  }\n`;\nfunction App() {\n  const [byStatus, setByStatus] = useState(0);\n  const [value, setValue] = useState(\"\");\n\n  let renameProperty = JSON.stringify(status.status).replace(\n    /\"deviceId\":/g,\n    '\"id\":'\n  );\n  const cameraStatus = JSON.parse(renameProperty);\n  const nameOfDevice = devices.devices;\n  console.log(cameraStatus);\n  console.log(nameOfDevice);\n  var mergeData = [\n    ...[cameraStatus, nameOfDevice]\n      .reduce(\n        (m, arr) => (\n          arr.forEach(\n            obj =>\n              (m.has(obj.id) && Object.assign(m.get(obj.id), obj)) ||\n              m.set(obj.id, obj)\n          ),\n          m\n        ),\n        new Map()\n      )\n      .values()\n  ];\n\n  let sortData = () => {\n    mergeData.sort((a, b) => {\n      return a.name.localeCompare(b.name);\n    });\n    const sort =\n      byStatus === 0\n        ? mergeData\n        : mergeData.sort((a, b) => b.active - a.active);\n    return sort.filter(dVices => {\n      return (\n        dVices.name.toUpperCase().indexOf(value.toUpperCase()) !== -1 ||\n        dVices.id.toString().indexOf(value) !== -1\n      );\n    });\n  };\n  const activeData = sortData().filter(online => {\n    return online.active === true;\n  });\n  const inactiveData = sortData().filter(online => {\n    return online.active === false;\n  });\n  console.log(1111, activeData);\n  console.log(2222, inactiveData);\n  return (\n    <Wrapper>\n      <header>\n        <img\n          placeholder='Search by Name or I...'\n          src={logo}\n          alt=''\n          style={{ width: \"20%\", height: \"35%\" }}\n        />\n      </header>\n      <Info>\n        <h1>Your Cameras</h1> <h5>Total Devices: {mergeData.length}</h5>\n      </Info>\n      <SearchContainer>\n        <Search setValue={setValue} value={value} />\n        <SortButton setByStatus={setByStatus} byStatus={byStatus} />\n      </SearchContainer>\n\n      {byStatus === 0 ? (\n        <Title>\n          <h3>All Devices</h3>\n          <h5>({sortData().length})</h5> <hr></hr>\n        </Title>\n      ) : (\n        <Title>\n          <h3>Active Cameras</h3>\n          <h5>({activeData.length})</h5>\n          <hr></hr>\n        </Title>\n      )}\n\n      {byStatus === 0 ? (\n        <Cameras>\n          {sortData().map((devices, id) => (\n            <SecurityDisplay key={id} devices={devices} />\n          ))}\n        </Cameras>\n      ) : (\n        <StatusView>\n          <Active>\n            {activeData.map((devices, id) => (\n              <SecurityDisplay key={id} devices={devices} />\n            ))}\n          </Active>\n          <InactiveTitle>\n            <h3>Inactive Cameras</h3>\n            <h5>({inactiveData.length})</h5>\n            <hr></hr>\n          </InactiveTitle>\n          <Inactive>\n            {inactiveData.map((devices, id) => (\n              <SecurityDisplay key={id} devices={devices} />\n            ))}\n          </Inactive>\n        </StatusView>\n      )}\n    </Wrapper>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}